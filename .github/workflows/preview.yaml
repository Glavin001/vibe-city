name: Vercel Preview Deployment

on:
  pull_request:

concurrency:
  group: vercel-preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub deployment
        id: create_deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: preview
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          description: Vercel preview deployment

      - name: Mark deployment in progress
        if: ${{ steps.create_deployment.outputs.deployment_id }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: in_progress
          log-url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build planner WASM (Docker)
        run: npm run build:planner

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel environment (preview)
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts (prebuilt)
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy prebuilt artifacts to Vercel (preview)
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --yes --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview_url=$url" >> "$GITHUB_OUTPUT"
          echo "Preview URL: $url"

      - name: Wait for deployment to be READY
        run: vercel inspect "${{ steps.deploy.outputs.preview_url }}" --wait --token=${{ secrets.VERCEL_TOKEN }}

      - name: Mark deployment successful
        if: ${{ success() && steps.create_deployment.outputs.deployment_id }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: success
          environment-url: ${{ steps.deploy.outputs.preview_url }}
          log-url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: Mark deployment failed
        if: ${{ failure() && steps.create_deployment.outputs.deployment_id }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: failure
          log-url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: Mark deployment cancelled
        if: ${{ cancelled() && steps.create_deployment.outputs.deployment_id }}
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: inactive
          log-url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'


      # - name: Run tests
      #   run: npm run test

